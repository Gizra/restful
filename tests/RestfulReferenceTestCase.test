<?php

/**
 * @file
 * Contains RestfulReferenceTestCase.
 */

class RestfulReferenceTestCase extends RestfulCurlBaseTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Referenced properties',
      'description' => 'Test defining a public field as a resource for base properties (e.g. the UID on the node entity) and fields.',
      'group' => 'Restful',
    );
  }

  function setUp() {
    parent::setUp('restful_test', 'restful_example');
  }

  /**
   * Test property reference.
   */
  function testPropertyReference() {
    $user1 = $this->drupalCreateUser();

    $settings = array(
      'type' => 'article',
      'uid' => $user1->uid,
    );
    $node1 = $this->drupalCreateNode($settings);
    $node2 = $this->drupalCreateNode($settings);

    $handler = restful_get_restful_handler('test_articles', 1, 2);
    variable_set('restful_property_reference_simple', TRUE);

    $result = $handler->get($node1->nid);
    $this->assertEqual($result[0]['user']->uid, $user1->uid, 'Property is not defined as resource, thus the referenced entity appears as the entity.');

    variable_set('restful_property_reference_advanced', TRUE);
    // Clear public fields cache.
    $handler->setPublicFields(array());

    $result = $handler->get($node2->nid);
    $this->assertEqual($result[0]['user']['id'], $user1->uid, 'Property is defined as resource, thus the referenced entity appears as the rendered resource.');
  }

  /**
   * Test field reference.
   */
  function testEntityReference() {
    restful_test_create_vocabulary_and_terms();

    $settings = array(
      'type' => 'article',
    );
    $node1 = $this->drupalCreateNode($settings);

    $term = taxonomy_get_term_by_name('term 1');
    $term = reset($term);

    $wrapper = entity_metadata_wrapper('node', $node1);
    $wrapper->field_tags->set($term);
    $wrapper->save();

    $handler = restful_get_restful_handler('articles', 1, 5);
    $result = $handler->get($node1->nid);

    $this->assertEqual($result[0]['tags']['id'], $term->tid, 'Field is defined as resource, thus the referenced entity appears as the rendered resource.');
  }
}
