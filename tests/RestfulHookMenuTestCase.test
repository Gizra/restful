<?php

/**
 * @file
 * Contains RestfulHookMenuTestCase
 */

class RestfulHookMenuTestCase extends RestfulCurlBaseTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Menu API',
      'description' => 'Test the hook_menu() implementation.',
      'group' => 'Restful',
    );
  }

  function setUp() {
    parent::setUp('restful_example');
  }

  /**
   * Test viewing an entity (GET method).
   */
  function testViewEntity() {
    $user1 = $this->drupalCreateUser();

    $title = $this->randomName();
    $settings = array(
      'type' => 'article',
      'title' => $title,
      'uid' => $user1->uid,
    );
    $node1 = $this->drupalCreateNode($settings);

    // Test version 1.0
    $result = $this->httpRequest('api/v1/articles/' . $node1->nid);
    $expected_result = array(
      'id' => $node1->nid,
      'label' => $node1->title,
      'self' => url('node/' . $node1->nid, array('absolute' => TRUE)),
    );

    $this->assertEqual($result['body'], json_encode($expected_result));

    // Test version 1.1
    $headers = array('Restful-Minor-Version: 1');
    $result = $this->httpRequest('api/v1/articles/' . $node1->nid, 'GET', NULL, $headers);
    unset($expected_result['self']);
    $this->assertEqual($result['body'], json_encode($expected_result));
  }

  /**
   * Test HTTP headers change according to the response.
   */
  function testHttpHeaders() {
    // Valid request (eventough it's empty).
    $result = $this->httpRequest('api/v1/articles/', 'GET');
    $this->assertTrue(strpos($result['headers'], 'application/hal+json;'), '"application/hal+json" found in valid request.');

    // Invalid request.
    $result = $this->httpRequest('api/v1/articles/', 'GET', array('sort' => 'invalid_key'));
    $this->assertTrue(strpos($result['headers'], 'application/problem+json;'), '"application/problem+json" found in valid request.');
  }

  /**
   * Test response when menu status is MENU_ACCESS_DENIED or MENU_SITE_OFFLINE.
   */
  function testMenuStatus() {
    // Try to access login, for an authenticated user.
    $user1 = $this->drupalCreateUser();
    $this->drupalLogin($user1);

    $this->httpauth_credentials = $user1->name . ':' . $user1->pass_raw;
    $result = $this->httpRequest('api/login');

    $this->assertEqual($result['code'], '403', '403 status code sent for access denied menu item.');

    // Switch site to offline mode.
    variable_set('maintenance_mode', TRUE);
    $this->httpauth_credentials = NULL;
    $result = $this->httpRequest('api/login');
    $this->assertEqual($result['code'], '503', '503 status code sent for site in offline mode.');
  }

}
