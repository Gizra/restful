<?php

/**
 * @file
 * Contains RestfulCRUDTestCase
 */

class RestfulCRUDTestCase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Entity CRUD',
      'description' => 'Test the create, update and delete of an entity.',
      'group' => 'Restful',
    );
  }

  function setUp() {
    parent::setUp('restful_example', 'restful_test');
  }

  /**
   * Test viewing an entity (GET method).
   *
   * v1.0 - Simple entity view (id, label, self).
   * v1.1 - Text field with filtered text.
   * v1.2 - Multiple text field with filtered text.
   * v1.3 - Entity reference label.
   * v1.4 - Multiple entity reference label.
   * v1.5 - Entity reference as resource.
   * v1.6 - Multiple entity reference as resource.
   * v1.7 - "Callback" property.
   * v1.8 - Non-existing "callback" property.
   * v1.9 - "Process callback" property.
   * v1.10 - Non-existing "process callback" property.
   */
  function testViewEntity() {
    $entity1 = entity_create('entity_test', array('name' => 'main', 'uid' => $user1->uid));
    $entity1->save();

    $id = $entity1->pid;

    // v1.0 - Simple entity view (id, label, self).
    $handler = restful_get_restful_handler('entity_tests', 1, 0);
    $result = $handler->get($id);
    $expected_result = array(
      'id' => $id,
      'label' => 'Main test type',
      'self' => url('custom/' . $id)
    );
    $this->assertEqual($result, $expected_result);

    // v1.1 - Text field.
  }

  /**
   * Test creating an entity (POST method).
   */
  function testCreateEntity() {
    $handler = restful_get_restful_handler('articles');
    $label = $this->randomName();
    $request = array(
      'label' => $label,
    );
    $result = $handler->post('', $request);

    $node = node_load($result['id']);
    $expected_result = array(
      'id' => $node->nid,
      'label' => $node->title,
      'self' => url('node/' . $node->nid, array('absolute' => TRUE)),
    );

    $this->assertEqual($result, $expected_result, 'Entity was created.');
  }

}
