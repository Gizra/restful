<?php

/**
 * @file
 * Contains RestfulViewEntityMultiLingualTestCase
 */

class RestfulViewEntityMultiLingualTestCase extends RestfulCurlBaseTestCase {

  /**
   * The user to run the tests as.
   */
  protected $testUser;

  public static function getInfo() {
    return array(
      'name' => 'View multilingual entity',
      'description' => 'Test the viewing of a multilingual entity.',
      'group' => 'Restful',
    );
  }

  function setUp() {
    parent::setUp(
      'restful_example',
      'restful_test',
      'entityreference',
      'locale'
    );

    $this->testUser = $this->drupalCreateUser(
      array(
        'administer languages',
        'access administration pages',
        'administer site configuration',
      )
    );
    require_once DRUPAL_ROOT . '/includes/locale.inc';
    $this->drupalLogin($this->testUser);
    $languages = language_list();
    if (!isset($languages['en'])) {
      locale_add_language('en', NULL, NULL, LANGUAGE_LTR, '', 'en');
    }
    if (!isset($languages['fr'])) {
      locale_add_language('fr', NULL, NULL, LANGUAGE_LTR, '', 'fr');
    }
    $this->addTestFields();
  }

  /**
   * Add test fields.
   */
  protected function addTestFields() {
    // Text - single.
    $field = array(
      'field_name' => 'text_single',
      'type' => 'text_long',
      'entity_types' => array('restful_test_translatable_entity'),
      'cardinality' => 1,
      'translatable' => TRUE,
    );
    field_create_field($field);

    $instance = array(
      'field_name' => 'text_single',
      'bundle' => 'restful_test_translatable_entity',
      'entity_type' => 'restful_test_translatable_entity',
      'label' => t('Text single'),
      'settings' => array(
        'text_processing' => 0,
      ),
    );
    field_create_instance($instance);
    // Text - multiple.
    $field = array(
      'field_name' => 'text_multiple',
      'type' => 'text_long',
      'entity_types' => array('restful_test_translatable_entity'),
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'translatable' => TRUE,
    );
    field_create_field($field);

    $instance = array(
      'field_name' => 'text_multiple',
      'bundle' => 'restful_test_translatable_entity',
      'entity_type' => 'restful_test_translatable_entity',
      'label' => t('Text multiple'),
      'settings' => array(
        'text_processing' => 0,
      ),
    );
    field_create_instance($instance);
  }

  /**
   * Test viewing an entity (GET method).
   *
   * v1.0 - Simple entity view (id, label, self).
   * v1.1 - Text and entity reference fields.
   * v1.2 - "callback" and "process callback".
   * v1.3 - Non-existing "callback" property.
   * v1.4 - Non-existing "process callback" property.
   * v1.6 - XML output format.
   */
  function testViewEntity() {
    $user = $this->drupalCreateUser();
    $entity = entity_create(
      'restful_test_translatable_entity',
      array(
        'name' => 'restful_test_translatable_entity',
        'uid' => $user->uid,
        'label' => 'Test translation',
      )
    );
    $wrapper = entity_metadata_wrapper('restful_test_translatable_entity', $entity);

    $text1 = array(
      'en' => $this->randomName(),
      'fr' => $this->randomName(),
    );
    $text2 = array(
      'en' => $this->randomName(),
      'fr' => $this->randomName(),
    );

    foreach (array('en', 'fr') as $langcode) {
      $wrapper->language($langcode);
      $wrapper->text_single->set($text1[$langcode]);
      $wrapper->text_multiple->set(array($text1[$langcode], $text2[$langcode]));
    }
    $wrapper->save();

    $id = $entity->pid;
    foreach (array('en', 'fr') as $langcode) {
      $this->_testViewEntityLang($langcode, $id, $text1[$langcode], $text2[$langcode]);
    }
  }

  /**
   * Helper to test viewing an entity (GET method) in a certain language.
   *
   * @param string $langcode
   *   The language to view the entity in.
   * @param int $id
   *   The ID of the entity to test.
   */
  private function _testViewEntityLang($langcode, $id, $text1, $text2) {
    $handler = restful_get_restful_handler('restful_test_translatable_entity');
    $handler->setLangCode($langcode);
    $response = $handler->get($id);
    $result = $response[0];

    $expected_result = array(
      'id' => $id,
      'label' => 'Test translation',
      'self' => $handler->versionedUrl($id),
      'text_single' => $text1,
      'text_multiple' => array($text1, $text2),
    );

    $stripped_result = $result;
    $stripped_result['text_single'] = trim(strip_tags($result['text_single']));
    $stripped_result['text_multiple'][0] = trim(strip_tags($result['text_multiple'][0]));
    $stripped_result['text_multiple'][1] = trim(strip_tags($result['text_multiple'][1]));

    ksort($stripped_result);
    ksort($expected_result);
    $this->assertEqual($stripped_result, $expected_result, 'Entity view has correct result for "restful_test_translatable_entity" resource in language "' . $langcode . '".');
  }
}
